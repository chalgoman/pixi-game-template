{"version":3,"sources":["../../../../../src/core/renderers/webgl/systems/BatchSystem.js"],"names":["BatchSystem","renderer","emptyRenderer","currentRenderer","setObjectRenderer","objectRenderer","stop","state","setState","start","flush","reset"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA;;;;;;IAMqBA,W;;;AAEjB;;;AAGA,uBAAYC,QAAZ,EACA;AAAA;;AAGI;;;;;AAHJ,iDACI,wBAAMA,QAAN,CADJ;;AAQI,UAAKC,aAAL,GAAqB,6BAAmBD,QAAnB,CAArB;;AAEA;;;;;AAKA,UAAKE,eAAL,GAAuB,MAAKD,aAA5B;AAfJ;AAgBC;;AAED;;;;;;;wBAKAE,iB,8BAAkBC,c,EAClB;AACI,QAAI,KAAKF,eAAL,KAAyBE,cAA7B,EACA;AACI;AACH;;AAED,SAAKF,eAAL,CAAqBG,IAArB;AACA,SAAKH,eAAL,GAAuBE,cAAvB;;AAEA,SAAKJ,QAAL,CAAcM,KAAd,CAAoBC,QAApB,CAA6BH,eAAeE,KAA5C;;AAEA,SAAKJ,eAAL,CAAqBM,KAArB;AACH,G;;AAED;;;;;;;wBAKAC,K,oBACA;AACI,SAAKN,iBAAL,CAAuB,KAAKF,aAA5B;AACH,G;;wBAEDS,K,oBACA;AACI,SAAKP,iBAAL,CAAuB,KAAKF,aAA5B;AACH,G;;;;;kBAzDgBF,W","file":"BatchSystem.js","sourcesContent":["import WebGLSystem from './WebGLSystem';\nimport ObjectRenderer from '../utils/ObjectRenderer';\n\n/**\n * @class\n * @extends PIXI.WebGLSystem\n * @memberof PIXI\n */\n\nexport default class BatchSystem extends WebGLSystem\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        super(renderer);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.emptyRenderer = new ObjectRenderer(renderer);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.currentRenderer = this.emptyRenderer;\n    }\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n    setObjectRenderer(objectRenderer)\n    {\n        if (this.currentRenderer === objectRenderer)\n        {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n\n        this.renderer.state.setState(objectRenderer.state);\n\n        this.currentRenderer.start();\n    }\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     *\n     */\n    flush()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    reset()\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n}\n"]}