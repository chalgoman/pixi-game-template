{"version":3,"sources":["../../../../../../../src/core/renderers/webgl/systems/shader/shader/mapType.js"],"names":["mapType","GL_TABLE","GL_TO_GLSL_TYPES","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_2D_ARRAY","gl","type","typeNames","Object","keys","i","length","tn"],"mappings":";;;kBA2BwBA,O;AA3BxB,IAAIC,WAAW,IAAf;;AAEA,IAAMC,mBAAmB;AACrBC,WAAa,OADQ;AAErBC,gBAAa,MAFQ;AAGrBC,gBAAa,MAHQ;AAIrBC,gBAAa,MAJQ;;AAMrBC,SAAa,KANQ;AAOrBC,cAAa,OAPQ;AAQrBC,cAAa,OARQ;AASrBC,cAAa,OATQ;;AAWrBC,UAAa,MAXQ;AAYrBC,eAAa,OAZQ;AAarBC,eAAa,OAbQ;AAcrBC,eAAa,OAdQ;;AAgBrBC,gBAAa,MAhBQ;AAiBrBC,gBAAa,MAjBQ;AAkBrBC,gBAAa,MAlBQ;;AAoBrBC,gBAAa,WApBQ;AAqBrBC,kBAAe,aArBM;AAsBrBC,sBAAmB;AAtBE,CAAzB;;AAyBe,SAASpB,OAAT,CAAiBqB,EAAjB,EAAqBC,IAArB,EACf;AACI,QAAI,CAACrB,QAAL,EACA;AACI,YAAMsB,YAAYC,OAAOC,IAAP,CAAYvB,gBAAZ,CAAlB;;AAEAD,mBAAW,EAAX;;AAEA,aAAK,IAAIyB,IAAI,CAAb,EAAgBA,IAAIH,UAAUI,MAA9B,EAAsC,EAAED,CAAxC,EACA;AACI,gBAAME,KAAKL,UAAUG,CAAV,CAAX;;AAEAzB,qBAASoB,GAAGO,EAAH,CAAT,IAAmB1B,iBAAiB0B,EAAjB,CAAnB;AACH;AACJ;;AAED,WAAO3B,SAASqB,IAAT,CAAP;AACH","file":"mapType.js","sourcesContent":["let GL_TABLE = null;\n\nconst GL_TO_GLSL_TYPES = {\n    FLOAT:       'float',\n    FLOAT_VEC2:  'vec2',\n    FLOAT_VEC3:  'vec3',\n    FLOAT_VEC4:  'vec4',\n\n    INT:         'int',\n    INT_VEC2:    'ivec2',\n    INT_VEC3:    'ivec3',\n    INT_VEC4:    'ivec4',\n\n    BOOL:        'bool',\n    BOOL_VEC2:   'bvec2',\n    BOOL_VEC3:   'bvec3',\n    BOOL_VEC4:   'bvec4',\n\n    FLOAT_MAT2:  'mat2',\n    FLOAT_MAT3:  'mat3',\n    FLOAT_MAT4:  'mat4',\n\n    SAMPLER_2D:  'sampler2D',\n    SAMPLER_CUBE:  'samplerCube',\n    SAMPLER_2D_ARRAY:  'sampler2DArray',\n};\n\nexport default function mapType(gl, type)\n{\n    if (!GL_TABLE)\n    {\n        const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for (let i = 0; i < typeNames.length; ++i)\n        {\n            const tn = typeNames[i];\n\n            GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n    return GL_TABLE[type];\n}\n"]}