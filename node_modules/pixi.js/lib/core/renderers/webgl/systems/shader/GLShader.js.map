{"version":3,"sources":["../../../../../../src/core/renderers/webgl/systems/shader/GLShader.js"],"names":["ID","Shader","gl","vertexSrc","fragmentSrc","precision","attributeLocations","program","attributes","uniformData","uniforms","uniformGroups","id","bind","useProgram","destroy","deleteProgram"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIA,KAAK,CAAT;;AAEA;;;;;;;;;;;;;IAYqBC,M;AAEjB,kBAAYC,EAAZ,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmDC,kBAAnD,EACA;AAAA;;AACI;;;;;AAKA,SAAKJ,EAAL,GAAUA,EAAV;;AAEA,QAAIG,SAAJ,EACA;AACIF,kBAAY,4BAAaA,SAAb,EAAwBE,SAAxB,CAAZ;AACAD,oBAAc,4BAAaA,WAAb,EAA0BC,SAA1B,CAAd;AACH;;AAED;;;;;AAKA;AACA,SAAKE,OAAL,GAAe,8BAAeL,EAAf,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CE,kBAA3C,CAAf;;AAEA;;;;;;;;;;AAUA;AACA,SAAKE,UAAL,GAAkB,iCAAkBN,EAAlB,EAAsB,KAAKK,OAA3B,CAAlB;;AAEA,SAAKE,WAAL,GAAmB,+BAAgBP,EAAhB,EAAoB,KAAKK,OAAzB,CAAnB;;AAEA;;;;;;;;AAQA,SAAKG,QAAL,GAAgB,2CAA4BR,EAA5B,EAAgC,KAAKO,WAArC,CAAhB;;AAEA,SAAKE,aAAL,GAAqB,EAArB;;AAEA,SAAKC,EAAL,GAAUZ,IAAV;AACH;;AAED;;;;;mBAGAa,I,mBACA;AACI,SAAKX,EAAL,CAAQY,UAAR,CAAmB,KAAKP,OAAxB;AACH,G;;AAED;;;;;;mBAIAQ,O,sBACA;AACI,SAAKP,UAAL,GAAkB,IAAlB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA,QAAMR,KAAK,KAAKA,EAAhB;;AAEAA,OAAGc,aAAH,CAAiB,KAAKT,OAAtB;AACH,G;;;;;kBA5EgBN,M","file":"GLShader.js","sourcesContent":["import compileProgram from './shader/compileProgram';\nimport extractAttributes from './shader/extractAttributes';\nimport extractUniforms from './shader/extractUniforms';\nimport setPrecision from './shader/setPrecision';\nimport generateUniformAccessObject from './shader/generateUniformAccessObject';\n\nlet ID = 0;\n\n/**\n * Helper class to create a webGL Shader\n *\n * @class\n * @memberof PIXI.glCore\n * @param gl {WebGLRenderingContext}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param precision {string} The float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n * @param attributeLocations {object} A key value pair showing which location eact\n * attribute should sit eg {position:0, uvs:1}\n */\nexport default class Shader\n{\n    constructor(gl, vertexSrc, fragmentSrc, precision, attributeLocations)\n    {\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        if (precision)\n        {\n            vertexSrc = setPrecision(vertexSrc, precision);\n            fragmentSrc = setPrecision(fragmentSrc, precision);\n        }\n\n        /**\n         * The shader program\n         *\n         * @member {WebGLProgram}\n         */\n        // First compile the program..\n        this.program = compileProgram(gl, vertexSrc, fragmentSrc, attributeLocations);\n\n        /**\n         * The attributes of the shader as an object containing the following properties\n         * {\n         *  type,\n         *  size,\n         *  location,\n         *  pointer\n         * }\n         * @member {Object}\n         */\n        // next extract the attributes\n        this.attributes = extractAttributes(gl, this.program);\n\n        this.uniformData = extractUniforms(gl, this.program);\n\n        /**\n         * The uniforms of the shader as an object containing the following properties\n         * {\n         *  gl,\n         *  data\n         * }\n         * @member {Object}\n         */\n        this.uniforms = generateUniformAccessObject(gl, this.uniformData);\n\n        this.uniformGroups = {};\n\n        this.id = ID++;\n    }\n\n    /**\n     * Uses this shader\n     */\n    bind()\n    {\n        this.gl.useProgram(this.program);\n    }\n\n    /**\n     * Destroys this shader\n     * TODO\n     */\n    destroy()\n    {\n        this.attributes = null;\n        this.uniformData = null;\n        this.uniforms = null;\n\n        const gl = this.gl;\n\n        gl.deleteProgram(this.program);\n    }\n}\n"]}