{"version":3,"sources":["../../../../../../../src/core/renderers/webgl/systems/shader/shader/defaultValue.js"],"names":["defaultValue","type","size","Float32Array","Int32Array","booleanArray","array","Array","i","length"],"mappings":";;;kBAMwBA,Y;AANxB;;;;;;AAMe,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EACf;AACI,YAAQD,IAAR;AAEI,aAAK,OAAL;AACI,mBAAO,CAAP;;AAEJ,aAAK,MAAL;AACI,mBAAO,IAAIE,YAAJ,CAAiB,IAAID,IAArB,CAAP;;AAEJ,aAAK,MAAL;AACI,mBAAO,IAAIC,YAAJ,CAAiB,IAAID,IAArB,CAAP;;AAEJ,aAAK,MAAL;AACI,mBAAO,IAAIC,YAAJ,CAAiB,IAAID,IAArB,CAAP;;AAEJ,aAAK,KAAL;AACA,aAAK,WAAL;AACA,aAAK,gBAAL;AACI,mBAAO,CAAP;;AAEJ,aAAK,OAAL;AACI,mBAAO,IAAIE,UAAJ,CAAe,IAAIF,IAAnB,CAAP;;AAEJ,aAAK,OAAL;AACI,mBAAO,IAAIE,UAAJ,CAAe,IAAIF,IAAnB,CAAP;;AAEJ,aAAK,OAAL;AACI,mBAAO,IAAIE,UAAJ,CAAe,IAAIF,IAAnB,CAAP;;AAEJ,aAAK,MAAL;AACI,mBAAO,KAAP;;AAEJ,aAAK,OAAL;;AAEI,mBAAOG,aAAa,IAAIH,IAAjB,CAAP;;AAEJ,aAAK,OAAL;AACI,mBAAOG,aAAa,IAAIH,IAAjB,CAAP;;AAEJ,aAAK,OAAL;AACI,mBAAOG,aAAa,IAAIH,IAAjB,CAAP;;AAEJ,aAAK,MAAL;AACI,mBAAO,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EACpB,CADoB,EACjB,CADiB,CAAjB,CAAP;;AAGJ,aAAK,MAAL;AACI,mBAAO,IAAIA,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EACpB,CADoB,EACjB,CADiB,EACd,CADc,EAEpB,CAFoB,EAEjB,CAFiB,EAEd,CAFc,CAAjB,CAAP;;AAIJ,aAAK,MAAL;AACI,mBAAO,IAAIA,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EACpB,CADoB,EACjB,CADiB,EACd,CADc,EACX,CADW,EAEpB,CAFoB,EAEjB,CAFiB,EAEd,CAFc,EAEX,CAFW,EAGpB,CAHoB,EAGjB,CAHiB,EAGd,CAHc,EAGX,CAHW,CAAjB,CAAP;AAnDR;;AAyDA,WAAO,IAAP;AACH;;AAED,SAASE,YAAT,CAAsBH,IAAtB,EACA;AACI,QAAMI,QAAQ,IAAIC,KAAJ,CAAUL,IAAV,CAAd;;AAEA,SAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EACA;AACIF,cAAME,CAAN,IAAW,KAAX;AACH;;AAED,WAAOF,KAAP;AACH","file":"defaultValue.js","sourcesContent":["/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n */\nexport default function defaultValue(type, size)\n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'sampler2D':\n        case 'sampler2DArray':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n\nfunction booleanArray(size)\n{\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++)\n    {\n        array[i] = false;\n    }\n\n    return array;\n}\n"]}