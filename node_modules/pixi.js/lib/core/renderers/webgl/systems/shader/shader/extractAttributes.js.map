{"version":3,"sources":["../../../../../../../src/core/renderers/webgl/systems/shader/shader/extractAttributes.js"],"names":["extractAttributes","gl","program","attributes","totalAttributes","getProgramParameter","ACTIVE_ATTRIBUTES","i","attribData","getActiveAttrib","type","name","size","location","getAttribLocation","pointer"],"mappings":";;;kBAWwBA,iB;;AAXxB;;;;AACA;;;;;;AAEA;;;;;;;;AAQe,SAASA,iBAAT,CAA2BC,EAA3B,EAA+BC,OAA/B,EACf;AACI,QAAMC,aAAa,EAAnB;;AAEA,QAAMC,kBAAkBH,GAAGI,mBAAH,CAAuBH,OAAvB,EAAgCD,GAAGK,iBAAnC,CAAxB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,eAApB,EAAqCG,GAArC,EACA;AACI,YAAMC,aAAaP,GAAGQ,eAAH,CAAmBP,OAAnB,EAA4BK,CAA5B,CAAnB;AACA,YAAMG,OAAO,uBAAQT,EAAR,EAAYO,WAAWE,IAAvB,CAAb;;AAEAP,mBAAWK,WAAWG,IAAtB,IAA8B;AAC1BD,sBAD0B;AAE1BE,kBAAM,uBAAQF,IAAR,CAFoB;AAG1BG,sBAAUZ,GAAGa,iBAAH,CAAqBZ,OAArB,EAA8BM,WAAWG,IAAzC,CAHgB;AAI1B;AACAI;AAL0B,SAA9B;AAOH;;AAED,WAAOZ,UAAP;AACH;;AAED,SAASY,OAAT,GAAkB;AAClB;AACG;AACF","file":"extractAttributes.js","sourcesContent":["import mapType from './mapType';\nimport mapSize from './mapSize';\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nexport default function extractAttributes(gl, program)\n{\n    const attributes = {};\n\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++)\n    {\n        const attribData = gl.getActiveAttrib(program, i);\n        const type = mapType(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            type,\n            size: mapSize(type),\n            location: gl.getAttribLocation(program, attribData.name),\n            // TODO - make an attribute object\n            pointer,\n        };\n    }\n\n    return attributes;\n}\n\nfunction pointer()// type, normalized, stride, start)\n{\n   // gl.vertexAttribPointer(this.location, this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n}\n"]}