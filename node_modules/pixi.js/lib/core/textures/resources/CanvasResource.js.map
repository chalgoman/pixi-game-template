{"version":3,"sources":["../../../../src/core/textures/resources/CanvasResource.js"],"names":["CanvasResource","source","loaded","width","height","uploadable","load","Promise","resolve","from","canvas"],"mappings":";;;;AAAA;;;;;;;;;;;;IAEqBA,c;;;AAEjB,4BAAYC,MAAZ,EACA;AAAA;;AAAA,qDACI,4BAAMA,MAAN,CADJ;;AAGI,cAAKC,MAAL,GAAc,IAAd,CAHJ,CAGwB;AACpB,cAAKC,KAAL,GAAaF,OAAOE,KAApB;AACA,cAAKC,MAAL,GAAcH,OAAOG,MAArB;;AAEA,cAAKC,UAAL,GAAkB,IAAlB;;AAEA,cAAKC,IAAL,GAAY,IAAIC,OAAJ,CAAY,UAACC,OAAD,EACxB;AACIA;AACH,SAHW,CAAZ;AATJ;AAaC;;mBAEMC,I,iBAAKC,M,EACZ;AACI,eAAO,IAAIV,cAAJ,CAAmBU,MAAnB,CAAP;AACH,K;;;;;kBArBgBV,c","file":"CanvasResource.js","sourcesContent":["import TextureResource from './TextureResource';\n\nexport default class CanvasResource extends TextureResource\n{\n    constructor(source)\n    {\n        super(source);\n\n        this.loaded = true; // TODO rename to ready?\n        this.width = source.width;\n        this.height = source.height;\n\n        this.uploadable = true;\n\n        this.load = new Promise((resolve) =>\n        {\n            resolve(this);\n        });\n    }\n\n    static from(canvas)\n    {\n        return new CanvasResource(canvas);\n    }\n}\n"]}