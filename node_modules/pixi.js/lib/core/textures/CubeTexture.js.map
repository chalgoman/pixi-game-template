{"version":3,"sources":["../../../src/core/textures/CubeTexture.js"],"names":["CubeTexture","width","height","format","target","TEXTURE_CUBE_MAP","resources","positiveX","side","texture","resource","texturePart","dirtyId","negativeX","positiveY","negativeY","positiveZ","negativeZ","sides","setResource","index","load","then","validate","valid","i","length","loaded","from","cubeTexture"],"mappings":"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","file":"CubeTexture.js","sourcesContent":["import Texture from './BaseTexture';\nimport ImageResource from './resources/ImageResource';\nimport { TARGETS } from './../const';\n\nexport default class CubeTexture extends Texture\n{\n    constructor(width, height, format)\n    {\n        super(null, 0, 1, width, height, format);\n\n        this.target = TARGETS.TEXTURE_CUBE_MAP; // gl.TEXTURE_CUBE_MAP\n\n        this.resources = [];\n\n        this.positiveX = { side: 0, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n        this.negativeX = { side: 1, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n\n        this.positiveY = { side: 2, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n        this.negativeY = { side: 3, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n\n        this.positiveZ = { side: 4, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n        this.negativeZ = { side: 5, texture: this, resource: null, texturePart: true, dirtyId: 0 };\n\n        this.sides = [this.positiveX, this.negativeX,\n            this.positiveY, this.negativeY,\n            this.positiveZ, this.negativeZ];\n    }\n\n    setResource(resource, index)\n    {\n        const side = this.sides[index];\n\n        side.resource = resource;\n\n        resource.load.then((resource) =>\n{\n            if (side.resource === resource)\n            {\n                this.width = resource.width;\n                this.height = resource.height;\n                // we have not swapped half way!\n                // side.dirtyId++;\n                this.validate();\n\n                this.dirtyId++;\n            }\n        });\n    }\n\n    validate()\n    {\n        let valid = true;\n\n        if (this.width === -1 || this.height === -1)\n        {\n            valid = false;\n        }\n\n        if (this.sides)\n        {\n            for (let i = 0; i < this.sides.length; i++)\n{\n                const side = this.sides[i];\n\n                if (side.resource && !side.resource.loaded)\n                {\n                    valid = false;\n                    break;\n                }\n            }\n        }\n\n        this.valid = valid;\n    }\n\n    static from(...urls)\n    {\n        const cubeTexture = new CubeTexture();\n\n        for (let i = 0; i < 6; i++)\n        {\n            cubeTexture.setResource(ImageResource.from(urls[i % urls.length]), i);\n        }\n\n        return cubeTexture;\n    }\n}\n"]}